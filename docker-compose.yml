version: '3'
services:

  #PHP Service
  laravel:
    build:
      context: ../api
      dockerfile: ./Dockerfile
    container_name: laravel
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: laravel
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ../api:/var/www
      - ../api/server/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ../api/server/log:/var/log
      - ../api/server/imagick/policy.xml:/etc/ImageMagick-6/policy.xml
    depends_on:
      - db
    ports:
      - "9000:9000"
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    environment:
      ENV: production
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../admin/dist:/var/www/admin/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./certbot/web-root/:/data/letsencrypt/
      - ./certbot/etc/:/etc/letsencrypt/
    depends_on:
      - laravel
      - nuxt
      - certbot
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:8
    container_name: db
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: laravel
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql/data:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #PhpMyAdmin
  myadmin:
    image: phpmyadmin/phpmyadmin
    container_name: myadmin
    restart: unless-stopped
    ports:
      - "8189:80"
    networks:
      - app-network


  #NUXT.JS
  nuxt:
    build:
      context: ../frontend
      dockerfile: ./Dockerfile
    container_name: nuxt
    command:
      "npm run start"
    ports:
      - "3000:3000"
    networks:
      - app-network


  #VUE.JS
  admin:
    build:
      context: ../admin
      dockerfile: ./Dockerfile
    container_name: admin
    volumes:
      - ../admin/dist:/usr/src/app/dist
    networks:
      - app-network


  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/var:/var/lib/letsencrypt
      - ./certbot/web-root:/var/www/html
      - ./certbot/log:/var/log/letsencrypt
    command:
      certonly --webroot --webroot-path=/var/www/html --email admin@prudy.info --agree-tos --no-eff-email -d api.dev.print.prudy.info -d dev.print.prudy.info


#Docker Networks
networks:
  app-network:
    driver: bridge
